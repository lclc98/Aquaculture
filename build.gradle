buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: false
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

version = "${minecraft_version}-${mod_version}" + getBuildNumber()
group = "com.teammetallurgy.aquaculture"
archivesBaseName = "Aquaculture"

repositories {
  maven {
    name = "JEI maven"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
}

minecraft {
    mappings channel: 'snapshot', version: project.mappings + "-" + "1.14.3"
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            mods {
                waddles {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            mods {
                waddles {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.14.4-28.0.91"
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
}

jar {
    manifest {
        attributes([
            "Implementation-Version": "${version}"
        ])
    }
}

task apiJar(type: Jar) {
	from sourceSets.main.allSource
	from sourceSets.main.output
    include 'com/teammetallurgy/aquaculture/api/**/*'
    classifier = 'api'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifactId "aquaculture2_${minecraft_version}"
            artifact jar
			artifact apiJar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

artifacts {
    archives apiJar
}

String getBuildNumber() {
    return System.getenv('BUILD_NUMBER') ? ".alpha" + System.getenv('BUILD_NUMBER') : "";
}
